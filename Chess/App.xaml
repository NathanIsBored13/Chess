<Application x:Class="Chess.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Chess"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <SolidColorBrush x:Key="WindowBackground" Color="Gray"/>
        <SolidColorBrush x:Key="BoarderBackground" Color="Silver"/>
        <SolidColorBrush x:Key="ButtonBackground" Color="LightGray"/>
        <SolidColorBrush x:Key="CheckeredBrush1" Color="GhostWhite"/>
        <SolidColorBrush x:Key="CheckeredBrush2" Color="DimGray"/>
        <SolidColorBrush x:Key="FontColour" Color="Black"/>
        <SolidColorBrush x:Key="HiglightColour" Color="LightBlue"/>

        <SolidColorBrush x:Key="CellSelectedColour" Color="Green" Opacity="0.5"/>
        <SolidColorBrush x:Key="MovePossibleColour" Color="Blue" Opacity="0.5"/>
        <SolidColorBrush x:Key="AttackMovePossibleColour" Color="Red" Opacity="0.5"/>
        <SolidColorBrush x:Key="InCheck" Color="Red"/>

        <ControlTemplate x:Key="CellTemplate" TargetType="local:Cell">
            <Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Margin="{TemplateBinding Margin}" Background="{TemplateBinding Background}">
                <Grid>
                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    <Ellipse Margin="10" IsHitTestVisible="False" Stroke="Transparent" Fill="{TemplateBinding Foreground}"/>
                </Grid>
            </Border>
        </ControlTemplate>

        <Style TargetType="Window" x:Key="Parent_Style">
            <Style.Resources>
                <Style TargetType="local:Cell">
                    <Setter Property="Template" Value="{StaticResource CellTemplate}"/>
                    <Setter Property="Margin" Value="1"/>
                    <Setter Property="Foreground" Value="Transparent"/>
                    <Style.Triggers>
                        <Trigger Property="Checkered" Value="True">
                            <Setter Property="Background" Value="{DynamicResource CheckeredBrush1}"/>
                        </Trigger>
                        <Trigger Property="Checkered" Value="False">
                            <Setter Property="Background" Value="{DynamicResource CheckeredBrush2}"/>
                        </Trigger>
                        <Trigger Property="Highlighted" Value="CellSelected">
                            <Setter Property="Foreground" Value="{DynamicResource CellSelectedColour}"/>
                        </Trigger>
                        <Trigger Property="Highlighted" Value="MovePossible">
                            <Setter Property="Foreground" Value="{DynamicResource MovePossibleColour}"/>
                        </Trigger>
                        <Trigger Property="Highlighted" Value="AttackMovePossible">
                            <Setter Property="Foreground" Value="{DynamicResource AttackMovePossibleColour}"/>
                        </Trigger>
                        <Trigger Property="Highlighted" Value="InCheck">
                            <Setter Property="Background" Value="{DynamicResource InCheck}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource HiglightColour}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="Button">
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Background" Value="{DynamicResource ButtonBackground}"/>
                    <Style.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="10"/>
                            <Setter Property="Padding" Value="5"/>
                        </Style>
                    </Style.Resources>
                </Style>
                <Style TargetType="Border">
                    <Setter Property="Background" Value="{DynamicResource BoarderBackground}"/>
                </Style>
                <Style TargetType="Label">
                    <Setter Property="Foreground" Value="{DynamicResource FontColour}"/>
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                </Style>
            </Style.Resources>
            <Setter Property="Background" Value="{DynamicResource WindowBackground}"/>
        </Style>
    </Application.Resources>
</Application>